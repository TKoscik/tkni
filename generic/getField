#!/bin/bash -e
#===============================================================================
# Get field value from BIDs filename.
# compliant with BIDs 1.2.2, and includes INPC-specific extensions
# Authors: Timothy R. Koscik, PhD
# Date: 2020-03-09
#===============================================================================

# Parse inputs -----------------------------------------------------------------
OPTS=$(getopt -o hi:f: --long input:,field:,help -n 'parse-options' -- "$@")
if [[ $? != 0 ]]; then
  echo "Failed parsing options" >&2
  exit 1
fi
eval set -- "$OPTS"

# Set default values for function ---------------------------------------------
INPUT=
FIELD=
HELP=false

while true; do
  case "$1" in
    -h | --help) HELP=true ; shift ;;
    -i | --input) INPUT="$2" ; shift 2 ;;
    -f | --field) FIELD="$2" ; shift 2 ;;
    -- ) shift ; break ;;
    * ) break ;;
  esac
done

# Usage Help -------------------------------------------------------------------
if [[ "${HELP}" == "true" ]]; then
  FCN_NAME=($(basename "$0"))
  echo ''
  echo '------------------------------------------------------------------------'
  echo "TK_BRAINLab: ${FCN_NAME}"
  echo '------------------------------------------------------------------------'
  echo "Usage: ${FCN_NAME}"
  echo '  -h | --help              display command help'
  echo '  -i | --input             BIDs compliant filepath'
  echo '  -f | --field             field to retreive.'
  echo '  field options:'
  echo '    sub, ses, task, acq, ce, rec, dir, run, mod*, echo, recording, proc,'
  echo '    site, mask, label, from, to, reg, prep, resid, xfm' 
  echo '    modality [image modality at end of filename]'
  echo '    [*mod refers to "mod" as a flag, not the mdality without a flag at'
  echo '     the end of the filename]'
  echo ''
  exit 0
fi

#==============================================================================
# Start of function
#==============================================================================
OUTPUT=
BNAME=$(basename ${INPUT})
PARTS=(${BNAME//_/ })

# remove file extensions -------------------------------------------------------
## special case for gzipped files
## if other cases of double file extensions are used add them in here
TMP=(${PARTS[-1]//./ })
if [[ ${#TMP[@]} -gt 1 ]]; then
  if [[ ${TMP[-1]} == "gz" ]]; then
    TMP2=${TMP[@]::${#TMP[@]}-2}
  else
    TMP2=${TMP[@]::${#TMP[@]}-1}
  fi
  TMP3=$(echo "${TMP2[@]}")
  PARTS[-1]=${TMP3// /.}
fi

# get field --------------------------------------------------------------------
if [[ "${FIELD,,}" == "modality" ]]; then
  OUTPUT=${PARTS[-1]}
else
  for (( i=0; i<${#PARTS[@]}; i++ )); do
    FLAG=(${PARTS[${i}]//-/ })
    if [[ "${FLAG[0],,}" == "${FIELD,,}" ]]; then
      OUTPUT=${FLAG[1]}
      break
    fi
  done
fi
echo ${OUTPUT[0]}

#==============================================================================
# End of function
#==============================================================================
exit 0

