#!/bin/bash -e
#===============================================================================
# <<DESCRIPTION>>
# Authors: <GIVENNAME> <FAMILYNAME>,
# Date: <date of initial commit>
# CHANGELOG: <description of major changes to functionality>
#===============================================================================
PROC_START=$(date +%Y-%m-%dT%H:%M:%S%z)
FCN_NAME=($(basename "$0"))
DATE_SUFFIX=$(date +%Y%m%dT%H%M%S%N)
OPERATOR=$(whoami)
OPERATOR=${OPERATOR//@}
KERNEL="$(uname -s)"
HARDWARE="$(uname -m)"
NO_LOG=false
umask 007

# actions on exit, write to logs, clean scratch --------------------------------
function egress {
  EXIT_CODE=$?
  PROC_STOP=$(date +%Y-%m-%dT%H:%M:%S%z)
  if [[ ${EXIT_CODE} -eq 0 ]]; then
    if [[ -n ${DIR_SCRATCH} ]]; then
      if [[ -d ${DIR_SCRATCH} ]]; then
        if [[ "$(ls -A ${DIR_SCRATCH})" ]]; then
          rm -R ${DIR_SCRATCH}
        else
          rmdir ${DIR_SCRATCH}
        fi
      fi
    fi
  fi
  if [[ "${NO_LOG}" == "false" ]]; then
    writeBenchmark ${OPERATOR} ${HARDWARE} ${KERNEL} ${FCN_NAME} \
      ${PROC_START} ${PROC_STOP} ${EXIT_CODE}
  fi
}
trap egress EXIT

# Parse inputs -----------------------------------------------------------------
OPTS=$(getopt -o hvl --long posterior:,volume:,dir-scratch:,\
help,verbose,no-log -n 'parse-options' -- "$@")
if [ $? != 0 ]; then
  echo "Failed parsing options" >&2
  exit 1
fi
eval set -- "$OPTS"

# Set default values for function ---------------------------------------------
POSTERIOR=
VOLUME=
DIR_SCRATCH=${TKNI_SCRATCH}/${FCN_NAME}_${OPERATOR}_${DATE_SUFFIX}
HELP=false
VERBOSE=false

while true; do
  case "$1" in
    -h | --help) HELP=true ; shift ;;
    -v | --verbose) VERBOSE=1 ; shift ;;
    -l | --no-log) NO_LOG=true ; shift ;;
    --image) IMAGE="$2" ; shift 2 ;;
    --framemask) MASK="$2" ; shift 2 ;;
    --dir-scratch) DIR_SCRATCH="$2" ; shift 2 ;;
    -- ) shift ; break ;;
    * ) break ;;
  esac
done

# Usage Help -------------------------------------------------------------------
if [[ "${HELP}" == "true" ]]; then
  echo ''
  echo '------------------------------------------------------------------------'
  echo "TKNI: ${FCN_NAME}"
  echo '------------------------------------------------------------------------'
  echo 'Residual Partial Voluming Error (rPVE):'
  echo 'rPVE indicates how much the calculated tissue volumes might still be'
  echo 'affected by mixing of tissue types. Lower values are better.'
  echo ''
  echo '  -h | --help              display command help'
  echo '  -l | --no-log            disable writing to output log'
  echo '  --image    <required>    NIfTI image to calculate stats for'
  echo '  --mask                   binary mask indicating foreground region'
  echo '  --dir-scratch            location for temporary files'
  echo ''
  NO_LOG=true
  exit 0
fi

#===============================================================================
# Start of Function
#===============================================================================
mkdir -p ${DIR_SCRATCH}
NV=$(niiInfo -i ${POSTERIOR} -f volumes)
P=${DIR_SCRATCH}/P.nii.gz
P_MSK=${DIR_SCRATCH}/Pmsk.nii.gz
P_NE5=${DIR_SCRATCH}/Pne5.nii.gz
P_GT5=${DIR_SCRATCH}/Pgt5.nii.gz
P_LE5=${DIR_SCRATCH}/Ple5.nii.gz
unset RPVE
for (( i=0; i<${NV}; i++ )); do
  3dcalc -a ${POSTERIOR}[${i}] -expr a -prefix ${P} > /dev/null
  niimath ${P} -thr 0.02 -uthr 0.98 ${P}
  niimath ${P} -bin ${P_MSK}
  TOTAL=($(3dROIstats -mask ${P_MSK} -nzsum ${P}))

  niimath ${P} -thr 0.5 -uthr 0.5 -binv ${P_NE5}
  niimath ${P} -thr 0.5 -mas ${P_NE5} ${P_GT5}
  PVGT5=($(3dROIstats -mask ${P_MSK} -nzsum ${P_GT5}))

  niimath ${P} -uthr 0.5 -mul -1 -add 1 ${P_LE5}
  PVLE5=($(3dROIstats -mask ${P_MSK} -nzsum ${P_LE5}))
  RPVE+=($(echo "scale=4; (${PVGT5[-1]} + ${PVLE5[-1]}) / ${TOTAL[-1]}" | bc -l))
  rm ${DIR_SCRATCH}/P*
done
echo ${RPVE[@]}

#===============================================================================
# End of Function
#===============================================================================
exit 0
