#!/bin/bash -e
#===============================================================================
# generate time series of ROIs
# Authors: Timothy R. Koscik
# Date: 2021-02-09
#===============================================================================
PROC_START=$(date +%Y-%m-%dT%H:%M:%S%z)
FCN_NAME=($(basename "$0"))
DATE_SUFFIX=$(date +%Y%m%dT%H%M%S%N)
OPERATOR=$(whoami)
OPERATOR=${OPERATOR//@}
KERNEL="$(uname -s)"
HARDWARE="$(uname -m)"
NO_LOG=false
umask 007

# actions on exit, write to logs, clean scratch --------------------------------
function egress {
  EXIT_CODE=$?
  PROC_STOP=$(date +%Y-%m-%dT%H:%M:%S%z)
  if [[ ${EXIT_CODE} -eq 0 ]]; then
    if [[ -n ${DIR_SCRATCH} ]]; then
      if [[ -d ${DIR_SCRATCH} ]]; then
        if [[ "$(ls -A ${DIR_SCRATCH})" ]]; then
          rm -R ${DIR_SCRATCH}
        else
          rmdir ${DIR_SCRATCH}
        fi
      fi
    fi
  fi
  if [[ "${NO_LOG}" == "false" ]]; then
    writeBenchmark ${OPERATOR} ${HARDWARE} ${KERNEL} ${FCN_NAME} \
      ${PROC_START} ${PROC_STOP} ${EXIT_CODE}
  fi
}
trap egress EXIT

# Parse inputs -----------------------------------------------------------------
OPTS=$(getopt -o hl --long prefix:,\
ts-bold:,label:,label-text:,dir-save:,\
help,no-log -n 'parse-options' -- "$@")
if [[ $? != 0 ]]; then
  echo "Failed parsing options" >&2
  exit 1
fi
eval set -- "$OPTS"

# Set default values for function ---------------------------------------------
PFX=
TS_BOLD=
LABEL=
LABTXT=
HELP=false
DIR_SAVE=

while true; do
  case "$1" in
    -h | --help) HELP=true ; shift ;;
    -l | --no-log) NO_LOG=true ; shift ;;
    --prefix) PFX="$2" ; shift 2 ;;
    --ts-bold) TS_BOLD="$2" ; shift 2 ;;
    --label) LABEL="$2" ; shift 2 ;;
    --label-text) LABTXT="$2" ; shift 2 ;;
    --dir-save) DIR_SAVE="$2" ; shift 2 ;;
    -- ) shift ; break ;;
    * ) break ;;
  esac
done

# Usage Help -------------------------------------------------------------------
if [[ "${HELP}" == "true" ]]; then
  echo ''
  echo '------------------------------------------------------------------------'
  echo "TKNI: ${FCN_NAME}"
  echo '------------------------------------------------------------------------'
  echo '  -h | --help              display command help'
  echo '  -l | --no-log            disable writing to output log'
  echo '  --prefix <value>         scan prefix, default: sub-123_ses-1234abcd'
  echo '  --ts-bold <value>        Full path to single, run timeseries'
  echo '  --template <value>       name of template to use, e.g., HCPICBM'
  echo '  --space <value>          spacing of template to use, e.g., 1mm'
  echo '  --label <value>          Name of label - NOT PATH, e.g., WBCXN'
  echo '  --dir-save <value>       directory to save output, default varies by function'
  echo ''
  NO_LOG=true
  exit 0
fi

#===============================================================================
# Start of function
#===============================================================================
if [[ ! -f "${TS_BOLD}" ]]; then
  echo "The BOLD file does not exist. Exiting."
  exit 1
fi

if [[ -z "${PFX}" ]]; then
  PFX=$(getBidsBase -s -i ${TS_BOLD})
fi

# check label input ------------------------------------------------------------
if [[ ! -f ${LABEL} ]]; then
  TLAB=(${LABEL//\+/ })
  LAB_PIPE=${TLAB[-1]}
  LABEL=${DIR_PROJECT}/derivatives/${PIPELINE}/anat/label/${IDPFX}_label-${LABEL}.nii.gz

fi
if [[ ! -f ${LABEL} ]]; then
  echo "ERROR [TKNI: ${FCN_NAME}] LABEL file not found."
  exit 2
fi

if [[ -z ${LABTXT} ]]; then
  LABTXT=$(getField -i ${LABEL} -f label)
fi
if [[ -z "${DIR_SAVE}" ]]; then
  DIR_SAVE="$(dirname ${TS_BOLD})/ts_${LABTXT}"
fi
mkdir -p ${DIR_SAVE}

# gather ROI timeseries -------------------------------------------------------
fslmeants -i ${TS_BOLD} \
  -o ${DIR_SAVE}/${PFX}_ts-${LABTXT}.csv \
  --label=${LABEL}
sed -i s/"  "/","/g ${DIR_SAVE}/${PFX}_ts-${LABTXT}.csv
sed -i s/",$"//g ${DIR_SAVE}/${PFX}_ts-${LABTXT}.csv

#===============================================================================
# End of function
#===============================================================================
exit 0

